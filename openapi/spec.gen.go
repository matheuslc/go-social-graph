// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xXXW/bNhf+KwTf91Kxkq5Xuks7pMtWoEU+sIvACBjpWGInkQxJ2TUM/ffhkJRl2bIt",
	"d0mKAbuzySOe5zzP+SBXNJWVkgKENTRZUZMWUDH386MGZuGrNPYGnmswFheVlgq05eBMUiksCLdRse+f",
	"QeS2oMnF+/cRtUsFNKHGai5y2kS0NqAfeYa2M6krZmlC65pndMe2iaiG55pryGjysP4wWrubNlEPnVFS",
	"GDgIbwfOjyDZA+LegD4Awtlkj8z2HGbMwpnlFdDoB8F5SgWrYCDAIeRr82gTFMaBNJ5G3ytGpZgOXv+v",
	"YUYT+r+4y9E4JGiMpDvYTUSfa2nHktAGtcuBljNewn4hlTS+RriFypyCL8BiWrMl/jeW2VEH3DrDoPSY",
	"D2iDQd8AYr1eq7cVx5rfo1KMJDaciCze8QpKLt6ARgRxH2j591XcOq5Bfo6x0jJyQlrs9lQaeV8tnNs2",
	"K/t4ZrIs5QK02YiZCws5HhuFbWRgcNup/ZjKutdH1gZORQNprbld3iJi7/QDMA36ssZxsqJP7t9VK87v",
	"f97RyE8qPMzvdmoV1iqfHlzMJH6fgUk1V5ZLQRN6V3BDuCFMEPjOKlUCkTNSGy5y8gVdviOXaQrGkI8y",
	"A3JVygXhgjBiFKR8xlOGBxEriT/3CUgbAS4uZa3J5dfrCSLitkRInyS5lSlnJfmkmSpwm0Z0Dtp4SBeT",
	"88k50iUVCKY4Tegvbgm7oS0cJTFTPC5lzsVmlqBSDs91RhP6Gbd/YyIrHSHaz+0PMltuT+u6tFwxbWNM",
	"+bOMWdZN/6GWYcxC6n6NrBdPrpOwIp++QWq9VF1yWl2DW/ANxPl/d36+FQBTqgxKxN+MFIfQW/kXiCEk",
	"znM/Ob784RCauqqYXraUEiYykoMljAhYEH9gRC3LDVYTwzyd4ndOpFabYY2wdsdIdDjCQxW/e3EbCHRR",
	"8LQgqJMLrhuLL6vEWJxhWhxQJJQYTR767cE3s0QDy+i0mW5q5x0E0VANMpMYLgntr9UvtMFN/eIVz5pY",
	"w2Et/aDt1FRMswqsa5YPK4ql6gqYRtRXgx8LfYqjDbqO3Uenr5MxvQvDgAZtozPEFkACKyNT5Uh9edet",
	"KCScvE8Zf0eLV+FN0KCDHIaqzFueIk33zviH+rxSuWxfUMd0rxuwmsMcArn+BIJzEePAjzquXVF0XLd3",
	"i+HM714+LzlnXnxsXLxws+o99cYI0GtBW21ngHDfdvydKl7NtKya/RpcObM37D7R4KGI8mc1ta2rKiIZ",
	"4XD8jeOIul4BQ9hoaW14H+1tXO0D6q2Hyis1rZ334EldC6dNy5if3aOJrsXIKroPhv/V0c+ro1aD/fq6",
	"G6Cet5r0z+u9rX6FOZRSVf42W+syPAmTODbO7ixHu0kpU1ZmMJ9UQJtp83cAAAD//1TqZvYJFQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
