// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9xXTW/jNhD9KwLbozZK2j3ptm2x27QLNEg26CEwAkYa29xKpDIc2TUM/fdiSMq2bNmR",
	"vfYeerOl0cyb9+aDXIrMlJXRoMmKdClsNoVSup+/IkiCO2PpHl5rsMQPKzQVIClwJpnRBNq9KOW/n0FP",
	"aCrSm/fvY0GLCkQqLKHSE9E0sUB4rRVCLtKn1YejJu7EsZXRFg4G2nIcC5Xz47HBUpJIRV2rXLwV35ns",
	"gni0gAdAOJv8WVInYC4J3pEqYTdqLKCUqjgddixqC6hlCT0++nJambeh403YnOlnM1F6f5Iyy8DaZzL/",
	"gO7FjTBGsNO9FgyLxTxOxFO4HchgJTFE/RFhLFLxQ7Ku+SQUfMLSO9hNLF5rQ0MJb5Pa4fkOzVgVsJ/p",
	"yljfc4qgtMfgC7Akolzwf0uSBjl4cIahqoZ84OW8B8Z6u1JvK48Vv29KMZDY4JFZ/KJKKJT+DjQyiMdA",
	"y7f3/cW7e6vaVnn18vMWKy0jR5RFF537MPaxWjgPbVV28YxNUZg5oN3IWWmCCbuNw2tmoPe1U/s5M3Vn",
	"jqwMnIoWshoVLR4YsQ/6AhIBP9S8ntp/H1tx/vj7i4j95mNn/u1arSlR5ctD6bFxURUV/OaTiR5MpmQR",
	"fUJZTaMPd7ciFjNAq4wWqbi5ur66ZtSmAi0rJVLxs3vEQ4mmDlkiK5UUPJM3xWLCJCmjb3OR+pH9u9R5",
	"4XChX8e/mHyxvYTrglQlkRKuvHe5JLle6n2da+3cYLdUVw+PLtfwxLx8hYw8Y+saIazBPfB97OL/dH29",
	"lYCsqkJlLvPkqzW6i/5QWXbXmgueg81QVeTF+OtPB9LWZSlx0bIaSZ1HE6BIRhrmkV9qsSA5sVzXkitm",
	"xN85nVp5+mXiLhqi0ulJ7h7JehKdT1U2jVgql9x6QX0/MXqOdAcUCe0q0qduoz6JOSoCMWpGm7p550Ew",
	"ViIaG041CkOo1S4Mo03tkqXKmwThsI5+3a2VrCTKEsiNrKel4E51/Sti4ZvBD+cuvfEGVW+dTUeXqZbO",
	"2u7h3/97ARvRFKLAysAyOYuSHmArXRTi79PPn6eSJds+q7xhGBPo60NveYyAwee3q3ihhto+TA6Zb/dA",
	"qGAGgVzvIeIdxnnwR2uuXeusuW7PAf39sb4rnXMZ7b8pnXlNbZ9btq5LK8ejkzbazZmHaOdKOmiI7h+W",
	"WwOyR/TEH7+S5RhN2ewvgY/O7JgOY4eXaK+zDCKfjo3kEIooXEn2zp/2zrJ5FrjQXNi5Hp20ZhFkvjub",
	"w/Tg3dCm7DftEJJqPbCSHoPh/6aW2oT28+Sc4qxNsBu1c6H4DWZQmKr057cai3AdSZPEOrt3E7a7Kkwm",
	"ixxmVyWIZtT8FwAA///bE2fE1RMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
