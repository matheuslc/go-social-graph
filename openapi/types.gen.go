// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package openapi

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// CreatePostRequest defines model for CreatePostRequest.
type CreatePostRequest struct {
	Content string             `json:"content"`
	UserId  openapi_types.UUID `json:"user_id"`
}

// CreatePostResponse defines model for CreatePostResponse.
type CreatePostResponse struct {
	Content string             `json:"content"`
	Id      openapi_types.UUID `json:"id"`
}

// CreateUserResponse defines model for CreateUserResponse.
type CreateUserResponse struct {
	CreatedAt time.Time          `json:"created_at"`
	Id        openapi_types.UUID `json:"id"`
	Username  string             `json:"username"`
}

// Post defines model for Post.
type Post struct {
	Content   string             `json:"content"`
	CreatedAt time.Time          `json:"created_at"`
	Id        openapi_types.UUID `json:"id"`
	Parent    *UserPost          `json:"parent,omitempty"`
	Quote     *string            `json:"quote,omitempty"`
}

// ProfileResponse defines model for ProfileResponse.
type ProfileResponse struct {
	Posts *[]UserPost `json:"posts,omitempty"`
	Stats *UserStats  `json:"stats,omitempty"`
	User  *User       `json:"user,omitempty"`
}

// RepostIntent defines model for RepostIntent.
type RepostIntent struct {
	Parent openapi_types.UUID `json:"parent"`
	Quote  *string            `json:"quote,omitempty"`
}

// TimelineResponse defines model for TimelineResponse.
type TimelineResponse struct {
	Posts *[]UserPost `json:"posts,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt time.Time          `json:"created_at"`
	Id        openapi_types.UUID `json:"id"`
	Username  string             `json:"username"`
}

// UserPost defines model for UserPost.
type UserPost struct {
	Post Post `json:"post"`
	User User `json:"user"`
}

// UserStats defines model for UserStats.
type UserStats struct {
	Followers  *int `json:"followers,omitempty"`
	Following  *int `json:"following,omitempty"`
	PostsCount *int `json:"posts_count,omitempty"`
}

// LoginHandlerMultipartBody defines parameters for LoginHandler.
type LoginHandlerMultipartBody struct {
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// CreateUserMultipartBody defines parameters for CreateUser.
type CreateUserMultipartBody struct {
	Username *string `json:"username,omitempty"`
}

// FollowHandlerJSONBody defines parameters for FollowHandler.
type FollowHandlerJSONBody struct {
	From *openapi_types.UUID `json:"from,omitempty"`
}

// UnfollowHandlerJSONBody defines parameters for UnfollowHandler.
type UnfollowHandlerJSONBody struct {
	From *openapi_types.UUID `json:"from,omitempty"`
}

// LoginHandlerMultipartRequestBody defines body for LoginHandler for multipart/form-data ContentType.
type LoginHandlerMultipartRequestBody LoginHandlerMultipartBody

// PostHandlerJSONRequestBody defines body for PostHandler for application/json ContentType.
type PostHandlerJSONRequestBody = CreatePostRequest

// RepostHandlerJSONRequestBody defines body for RepostHandler for application/json ContentType.
type RepostHandlerJSONRequestBody = RepostIntent

// CreateUserMultipartRequestBody defines body for CreateUser for multipart/form-data ContentType.
type CreateUserMultipartRequestBody CreateUserMultipartBody

// FollowHandlerJSONRequestBody defines body for FollowHandler for application/json ContentType.
type FollowHandlerJSONRequestBody FollowHandlerJSONBody

// UnfollowHandlerJSONRequestBody defines body for UnfollowHandler for application/json ContentType.
type UnfollowHandlerJSONRequestBody UnfollowHandlerJSONBody
